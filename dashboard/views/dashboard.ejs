<!DOCTYPE html>
<html>
<head>
    <title>Smart Schedule & Power Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        
        body { 
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.95);
            padding: 30px;
            border-radius: 20px;
            margin-bottom: 30px;
            text-align: center;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .header h1 {
            color: #2c3e50;
            font-size: 2.5em;
            margin-bottom: 10px;
            font-weight: 700;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
            position: relative;
            overflow: hidden;
        }
        
        .stat-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 4px;
            background: linear-gradient(90deg, #3498db, #2980b9);
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
        }
        
        .stat-number {
            font-size: 2.2em;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 8px;
        }
        
        .stat-label {
            color: #7f8c8d;
            font-size: 1em;
            font-weight: 500;
        }
        
        .stat-sublabel {
            color: #95a5a6;
            font-size: 0.85em;
            margin-top: 5px;
        }
        
        .filters-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .filters-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 15px;
            align-items: center;
        }
        
        .filter-group {
            display: flex;
            flex-direction: column;
        }
        
        .filter-group label {
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 5px;
            font-size: 0.9em;
        }
        
        .filter-group select {
            padding: 10px;
            border: 2px solid #ecf0f1;
            border-radius: 8px;
            background: white;
            font-size: 14px;
            transition: border-color 0.3s ease;
        }
        
        .filter-group select:focus {
            outline: none;
            border-color: #3498db;
        }
        
        .apply-btn {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            align-self: end;
        }
        
        .apply-btn:hover {
            background: linear-gradient(135deg, #2980b9, #1f4e79);
            transform: translateY(-2px);
        }
        
        .content-grid {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 30px;
        }
        
        .schedule-section, .power-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 30px;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .section-title {
            font-size: 1.8em;
            color: #2c3e50;
            margin-bottom: 25px;
            font-weight: 600;
            border-bottom: 3px solid #3498db;
            padding-bottom: 10px;
        }
        
        .day-header {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            padding: 15px 20px;
            border-radius: 10px;
            margin: 20px 0 15px 0;
            font-size: 1.3em;
            font-weight: 600;
        }
        
        .slot {
            border: none;
            margin: 10px 0;
            padding: 20px;
            border-radius: 12px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        .slot:hover {
            transform: translateX(5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
        
        .temporary {
            background: linear-gradient(135deg, #f39c12, #e67e22);
            color: white;
        }
        
        .permanent {
            background: linear-gradient(135deg, #27ae60, #229954);
            color: white;
        }
        
        .slot-time {
            font-weight: 700;
            font-size: 1.2em;
            margin-bottom: 8px;
        }
        
        .slot-info {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 10px;
            margin-top: 10px;
            font-size: 0.95em;
        }
        
        .power-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 15px;
            margin: 10px 0;
            background: linear-gradient(135deg, #ecf0f1, #d5dbdb);
            border-radius: 10px;
            transition: all 0.3s ease;
            border-left: 4px solid transparent;
        }
        
        .power-item:hover {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            transform: translateX(5px);
        }
        
        .power-watts {
            font-weight: 700;
            font-size: 1.2em;
        }
        
        .power-kwh {
            font-size: 0.9em;
            opacity: 0.8;
        }
        
        .power-high { 
            background: linear-gradient(135deg, #e74c3c, #c0392b) !important; 
            color: white; 
            border-left-color: #c0392b;
        }
        .power-medium { 
            background: linear-gradient(135deg, #f39c12, #e67e22) !important; 
            color: white; 
            border-left-color: #e67e22;
        }
        .power-low { 
            background: linear-gradient(135deg, #27ae60, #229954) !important; 
            color: white; 
            border-left-color: #229954;
        }
        
        .power-details-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            background: white;
            border-radius: 10px;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        .power-details-table th {
            background: linear-gradient(135deg, #34495e, #2c3e50);
            color: white;
            padding: 12px;
            text-align: left;
            font-weight: 600;
            font-size: 0.9em;
        }
        
        .power-details-table td {
            padding: 10px 12px;
            border-bottom: 1px solid #ecf0f1;
            font-size: 0.9em;
        }
        
        .power-details-table tr:hover {
            background: #f8f9fa;
        }
        
        .kwh-value {
            font-weight: 600;
            color: #27ae60;
        }
        
        .power-value {
            font-weight: 600;
        }
        
        .timestamp {
            color: #7f8c8d;
            font-size: 0.85em;
        }
        
        @media (max-width: 768px) {
            .content-grid {
                grid-template-columns: 1fr;
            }
            
            .slot-info {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üè´ Smart Schedule & Power Dashboard</h1>
            <p>Real-time schedule management and power monitoring system</p>
        </div>
        
        <div class="stats-grid">
            <div class="stat-card">
                <div class="stat-number"><%= stats.permanentSchedules %></div>
                <div class="stat-label">Permanent Schedules</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= stats.temporarySchedules %></div>
                <div class="stat-label">Temporary Schedules</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= stats.totalSlots %></div>
                <div class="stat-label">Total Schedule Slots</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= stats.activePowerMonitors %></div>
                <div class="stat-label">Active Power Monitors</div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= (stats.totalKwh || 0).toFixed(2) %></div>
                <div class="stat-label">Total kWh</div>
                <div class="stat-sublabel"><%= dateDescription %></div>
            </div>
            <div class="stat-card">
                <div class="stat-number"><%= Math.round(stats.avgPowerConsumption || 0) %>W</div>
                <div class="stat-label">Avg Power Usage</div>
                <div class="stat-sublabel">All Rooms</div>
            </div>
        </div>
        
        <!-- Filters Section -->
        <div class="filters-section">
            <form method="GET" action="/">
                <div class="filters-grid">
                    <div class="filter-group">
                        <label for="room">Filter by Room:</label>
                        <select name="room" id="room">
                            <option value="all" <%= selectedRoom === 'all' ? 'selected' : '' %>>All Rooms</option>
                            <% availableRooms.forEach(room => { %>
                                <option value="<%= room %>" <%= selectedRoom === room ? 'selected' : '' %>><%= room %></option>
                            <% }); %>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="dateRange">Date Range:</label>
                        <select name="dateRange" id="dateRange">
                            <option value="1h" <%= dateRange === '1h' ? 'selected' : '' %>>Last Hour</option>
                            <option value="24h" <%= dateRange === '24h' ? 'selected' : '' %>>Last 24 Hours</option>
                            <option value="7d" <%= dateRange === '7d' ? 'selected' : '' %>>Last 7 Days</option>
                            <option value="30d" <%= dateRange === '30d' ? 'selected' : '' %>>Last 30 Days</option>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="sortBy">Sort by:</label>
                        <select name="sortBy" id="sortBy">
                            <option value="timestamp" <%= sortBy === 'timestamp' ? 'selected' : '' %>>Time</option>
                            <option value="room" <%= sortBy === 'room' ? 'selected' : '' %>>Room</option>
                            <option value="power" <%= sortBy === 'power' ? 'selected' : '' %>>Power Usage</option>
                            <option value="kwh" <%= sortBy === 'kwh' ? 'selected' : '' %>>kWh Usage</option>
                        </select>
                    </div>
                    
                    <div class="filter-group">
                        <label for="sortOrder">Order:</label>
                        <select name="sortOrder" id="sortOrder">
                            <option value="desc" <%= sortOrder === 'desc' ? 'selected' : '' %>>Descending</option>
                            <option value="asc" <%= sortOrder === 'asc' ? 'selected' : '' %>>Ascending</option>
                        </select>
                    </div>
                    
                    <button type="submit" class="apply-btn">Apply Filters</button>
                </div>
            </form>
        </div>
        
        <div class="content-grid">
            <div class="schedule-section">
                <h2 class="section-title">üìÖ Weekly Schedule</h2>
                
                <% const dayOrder = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']; %>
                <% dayOrder.forEach(day => { %>
                    <div class="day-header">üìÖ <%= day %></div>
                    
                    <% if (scheduleByDay[day] && scheduleByDay[day].length > 0) { %>
                        <% scheduleByDay[day].forEach(slot => { %>
                            <div class="<%= slot.is_temporary ? 'slot temporary' : 'slot permanent' %>">
                                <div class="slot-time">
                                    <%= slot.is_temporary ? '‚ö°' : 'üìã' %> <%= slot.start_time %> - <%= slot.end_time %>
                                </div>
                                <div class="slot-info">
                                    <div>üè¢ Room: <%= slot.room_id %></div>
                                    <div>üìö <%= slot.subject %></div>
                                    <div>üë®‚Äçüè´ <%= slot.teacher %></div>
                                    <div><%= slot.teacher_email ? `üìß ${slot.teacher_email}` : '' %></div>
                                </div>
                            </div>
                        <% }); %>
                    <% } else { %>
                        <p style="margin: 15px 0; color: #7f8c8d; font-style: italic;">No scheduled classes</p>
                    <% } %>
                <% }); %>
            </div>
            
            <div class="power-section">
                <h2 class="section-title">‚ö° Power Usage - <%= dateDescription %></h2>
                
                <!-- Summary Cards -->
                <h3 style="margin-bottom: 15px; color: #2c3e50;">üìä Room Summary</h3>
                <% if (summaryPowerData.length === 0) { %>
                    <p style="color: #7f8c8d; font-style: italic;">No power usage data for selected filters</p>
                <% } else { %>
                    <% summaryPowerData.forEach(power => { %>
                        <% 
                            const avgWatts = Math.round(power.avg_watts);
                            const maxWatts = Math.round(power.max_watts);
                            const totalKwh = parseFloat(power.total_kwh) || 0;
                            let powerClass = 'power-low';
                            if (avgWatts > 1000) powerClass = 'power-high';
                            else if (avgWatts > 500) powerClass = 'power-medium';
                            
                            const lastReading = new Date(power.last_reading).toLocaleString();
                        %>
                        <div class="power-item <%= powerClass %>">
                            <div>
                                <div style="font-weight: 600;">üè¢ <%= power.room_id %></div>
                                <div style="font-size: 0.9em;">Last: <%= lastReading %></div>
                                <div class="power-kwh">üìà <%= power.reading_count %> readings</div>
                            </div>
                            <div>
                                <div class="power-watts"><%= avgWatts %>W avg</div>
                                <div class="power-kwh"><%= totalKwh.toFixed(3) %> kWh</div>
                                <div style="font-size: 0.8em;">Max: <%= maxWatts %>W</div>
                            </div>
                        </div>
                    <% }); %>
                <% } %>
                
                <!-- Live Readings -->
                <h3 style="margin-top: 30px; margin-bottom: 15px; color: #2c3e50;">üî¥ Live Readings</h3>
                <% const liveRooms = Object.keys(latestPowerReadings); %>
                <% if (liveRooms.length === 0) { %>
                    <p style="color: #7f8c8d; font-style: italic;">No live readings available</p>
                <% } else { %>
                    <% liveRooms.forEach(roomId => { %>
                        <% 
                            const reading = latestPowerReadings[roomId];
                            const watts = reading.watts;
                            let powerClass = 'power-low';
                            if (watts > 1000) powerClass = 'power-high';
                            else if (watts > 500) powerClass = 'power-medium';
                            
                            const timeAgo = Math.round((Date.now() - reading.timestamp.getTime()) / 1000);
                        %>
                        <div class="power-item <%= powerClass %>">
                            <div>
                                <div style="font-weight: 600;">üì° <%= roomId %></div>
                                <div style="font-size: 0.9em;"><%= timeAgo %>s ago</div>
                            </div>
                            <div class="power-watts"><%= watts %>W</div>
                        </div>
                    <% }); %>
                <% } %>
                
                <!-- Detailed Table -->
                <% if (detailedPowerData.length > 0) { %>
                    <h3 style="margin-top: 30px; margin-bottom: 15px; color: #2c3e50;">üìã Detailed Readings</h3>
                    <div style="max-height: 400px; overflow-y: auto;">
                        <table class="power-details-table">
                            <thead>
                                <tr>
                                    <th>Room</th>
                                    <th>Timestamp</th>
                                    <th>Power (W)</th>
                                    <th>Energy (kWh)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% detailedPowerData.slice(0, 100).forEach(reading => { %>
                                    <% 
                                        const kwh = parseFloat(reading.kwh_consumed) || 0;
                                        const timestamp = new Date(reading.timestamp).toLocaleString();
                                    %>
                                    <tr>
                                        <td><strong><%= reading.room_id %></strong></td>
                                        <td class="timestamp"><%= timestamp %></td>
                                        <td class="power-value"><%= reading.power_watts %>W</td>
                                        <td class="kwh-value"><%= kwh.toFixed(4) %></td>
                                    </tr>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                    <% if (detailedPowerData.length > 100) { %>
                        <p style="text-align: center; margin-top: 10px; color: #7f8c8d; font-style: italic;">
                            Showing first 100 of <%= detailedPowerData.length %> readings
                        </p>
                    <% } %>
                <% } %>
            </div>
        </div>
    </div>
    
    <script>
        // Auto-refresh every 30 seconds
        setTimeout(() => {
            location.reload();
        }, 30000);
    </script>
</body>
</html>