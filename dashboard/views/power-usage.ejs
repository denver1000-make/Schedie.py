<!DOCTYPE html>
<html>
<head>
    <title>Power Usage Dashboard</title>
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }
        
        body { 
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; 
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        
        .layout {
            display: flex;
            min-height: 100vh;
        }
        
        .sidebar {
            width: 250px;
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            padding: 20px;
            box-shadow: 2px 0 10px rgba(0, 0, 0, 0.1);
        }
        
        .sidebar h2 {
            color: #2c3e50;
            margin-bottom: 30px;
            font-size: 1.5em;
        }
        
        .nav-menu {
            list-style: none;
        }
        
        .nav-menu li {
            margin-bottom: 10px;
        }
        
        .nav-menu a {
            display: block;
            padding: 15px 20px;
            color: #2c3e50;
            text-decoration: none;
            border-radius: 10px;
            transition: all 0.3s ease;
            font-weight: 500;
        }
        
        .nav-menu a:hover {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            transform: translateX(5px);
        }
        
        .nav-menu a.active {
            background: linear-gradient(135deg, #e67e22, #d35400);
            color: white;
        }
        
        .main-content {
            flex: 1;
            padding: 20px;
        }
        
        .header {
            background: rgba(255, 255, 255, 0.95);
            padding: 30px;
            border-radius: 20px;
            margin-bottom: 30px;
            text-align: center;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .header h1 {
            color: #2c3e50;
            font-size: 2.5em;
            margin-bottom: 10px;
            font-weight: 700;
        }
        
        .filters {
            background: rgba(255, 255, 255, 0.95);
            padding: 25px;
            border-radius: 15px;
            margin-bottom: 30px;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .filter-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            align-items: end;
        }
        
        .filter-group {
            display: flex;
            flex-direction: column;
        }
        
        .filter-group label {
            margin-bottom: 8px;
            font-weight: 600;
            color: #2c3e50;
        }
        
        .filter-group select,
        .filter-group input {
            padding: 12px;
            border: 2px solid #ecf0f1;
            border-radius: 8px;
            font-size: 1em;
            transition: border-color 0.3s ease;
        }
        
        .filter-group select:focus,
        .filter-group input:focus {
            outline: none;
            border-color: #3498db;
        }
        
        .filter-btn {
            padding: 12px 25px;
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 1em;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
        }
        
        .filter-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.4);
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: rgba(255, 255, 255, 0.95);
            padding: 25px;
            border-radius: 15px;
            text-align: center;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            transition: transform 0.3s ease;
        }
        
        .stat-card:hover {
            transform: translateY(-5px);
        }
        
        .stat-number {
            font-size: 2em;
            font-weight: 700;
            color: #2c3e50;
            margin-bottom: 8px;
        }
        
        .stat-label {
            color: #7f8c8d;
            font-size: 1em;
        }
        
        .content-grid {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 30px;
        }
        
        .usage-section {
            background: rgba(255, 255, 255, 0.95);
            border-radius: 20px;
            padding: 30px;
            backdrop-filter: blur(10px);
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        
        .section-title {
            font-size: 1.8em;
            color: #2c3e50;
            margin-bottom: 25px;
            font-weight: 600;
            border-bottom: 3px solid #e67e22;
            padding-bottom: 10px;
        }
        
        .room-card {
            border: none;
            margin: 15px 0;
            padding: 20px;
            border-radius: 12px;
            transition: all 0.3s ease;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
        }
        
        .room-card:hover {
            transform: translateY(-3px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
        }
        
        .power-high { background: linear-gradient(135deg, #e74c3c, #c0392b); color: white; }
        .power-medium { background: linear-gradient(135deg, #f39c12, #e67e22); color: white; }
        .power-low { background: linear-gradient(135deg, #27ae60, #229954); color: white; }
        .power-default { background: linear-gradient(135deg, #ecf0f1, #d5dbdb); color: #2c3e50; }
        
        .room-header {
            display: flex;
            justify-content: between;
            align-items: center;
            margin-bottom: 15px;
        }
        
        .room-name {
            font-size: 1.3em;
            font-weight: 700;
        }
        
        .room-stats {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));
            gap: 10px;
            font-size: 0.9em;
        }
        
        .stat-item {
            text-align: center;
            padding: 8px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 8px;
        }
        
        .stat-value {
            font-weight: 700;
            font-size: 1.1em;
        }
        
        .detailed-readings {
            max-height: 400px;
            overflow-y: auto;
        }
        
        .reading-item {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 8px 12px;
            margin: 5px 0;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 6px;
            font-size: 0.85em;
        }
        
        @media (max-width: 768px) {
            .layout {
                flex-direction: column;
            }
            
            .sidebar {
                width: 100%;
            }
            
            .nav-menu {
                display: flex;
                flex-wrap: wrap;
                gap: 10px;
            }
            
            .nav-menu li {
                margin: 0;
            }
            
            .content-grid {
                grid-template-columns: 1fr;
            }
            
            .filter-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div class="layout">
        <aside class="sidebar">
            <h2>📋 Dashboard</h2>
            <ul class="nav-menu">
                <li><a href="/">📅 Schedule Calendar</a></li>
                <li><a href="/power-usage" class="active">⚡ Power Usage</a></li>
            </ul>
        </aside>
        
        <main class="main-content">
            <div class="header">
                <h1>⚡ Power Usage Dashboard</h1>
                <p>Monitor power consumption across all rooms</p>
            </div>
            
            <div class="filters">
                <form method="GET" action="/power-usage">
                    <div class="filter-grid">
                        <div class="filter-group">
                            <label for="room">Room:</label>
                            <select name="room" id="room">
                                <option value="all" <%= selectedRoom === 'all' ? 'selected' : '' %>>All Rooms</option>
                                <% availableRooms.forEach(room => { %>
                                    <option value="<%= room %>" <%= selectedRoom === room ? 'selected' : '' %>><%= room %></option>
                                <% }); %>
                            </select>
                        </div>
                        
                        <div class="filter-group">
                            <label for="startDate">Start Date:</label>
                            <input type="date" name="startDate" id="startDate" value="<%= startDate %>">
                        </div>
                        
                        <div class="filter-group">
                            <label for="endDate">End Date:</label>
                            <input type="date" name="endDate" id="endDate" value="<%= endDate %>">
                        </div>
                        
                        <div class="filter-group">
                            <label for="sortBy">Sort By:</label>
                            <select name="sortBy" id="sortBy">
                                <option value="timestamp" <%= sortBy === 'timestamp' ? 'selected' : '' %>>Time</option>
                                <option value="room" <%= sortBy === 'room' ? 'selected' : '' %>>Room</option>
                                <option value="power" <%= sortBy === 'power' ? 'selected' : '' %>>Power</option>
                                <option value="kwh" <%= sortBy === 'kwh' ? 'selected' : '' %>>kWh</option>
                            </select>
                        </div>
                        
                        <div class="filter-group">
                            <button type="submit" class="filter-btn">📊 Update Report</button>
                        </div>
                    </div>
                </form>
                <p style="text-align: center; margin-top: 15px; color: #7f8c8d;">
                    📅 Showing data from <%= dateRange %>
                </p>
            </div>
            
            <div class="stats-grid">
                <div class="stat-card">
                    <div class="stat-number"><%= stats.totalRooms %></div>
                    <div class="stat-label">Monitored Rooms</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number"><%= stats.totalReadings.toLocaleString() %></div>
                    <div class="stat-label">Total Readings</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number"><%= stats.totalKwh.toFixed(2) %></div>
                    <div class="stat-label">Total kWh</div>
                </div>
                <div class="stat-card">
                    <div class="stat-number">₱<%= stats.estimatedCost.toFixed(2) %></div>
                    <div class="stat-label">Estimated Cost</div>
                </div>
            </div>
            
            <div class="content-grid">
                <div class="usage-section">
                    <h2 class="section-title">📊 Room Summary</h2>
                    
                    <% if (summaryPowerData.length === 0) { %>
                        <p style="color: #7f8c8d; font-style: italic;">No power usage data found for the selected criteria</p>
                    <% } else { %>
                        <% summaryPowerData.forEach(room => { %>
                            <% 
                                const avgWatts = Math.round(room.avg_watts);
                                let powerClass = 'power-default';
                                if (avgWatts > 1000) powerClass = 'power-high';
                                else if (avgWatts > 500) powerClass = 'power-medium';
                                else if (avgWatts > 0) powerClass = 'power-low';
                                
                                const totalKwh = parseFloat(room.total_kwh) || 0;
                                const estimatedCost = totalKwh * 12;
                            %>
                            <div class="room-card <%= powerClass %>">
                                <div class="room-header">
                                    <div class="room-name">🏢 <%= room.room_id %></div>
                                </div>
                                <div class="room-stats">
                                    <div class="stat-item">
                                        <div class="stat-value"><%= avgWatts %>W</div>
                                        <div>Avg Power</div>
                                    </div>
                                    <div class="stat-item">
                                        <div class="stat-value"><%= Math.round(room.max_watts) %>W</div>
                                        <div>Max Power</div>
                                    </div>
                                    <div class="stat-item">
                                        <div class="stat-value"><%= totalKwh.toFixed(2) %></div>
                                        <div>kWh</div>
                                    </div>
                                    <div class="stat-item">
                                        <div class="stat-value">₱<%= estimatedCost.toFixed(2) %></div>
                                        <div>Cost</div>
                                    </div>
                                    <div class="stat-item">
                                        <div class="stat-value"><%= room.reading_count %></div>
                                        <div>Readings</div>
                                    </div>
                                    <div class="stat-item">
                                        <div class="stat-value"><%= new Date(room.last_reading).toLocaleDateString() %></div>
                                        <div>Last Reading</div>
                                    </div>
                                </div>
                            </div>
                        <% }); %>
                    <% } %>
                </div>
                
                <div class="usage-section">
                    <h2 class="section-title">📈 Detailed Readings</h2>
                    
                    <div class="detailed-readings">
                        <% if (detailedPowerData.length === 0) { %>
                            <p style="color: #7f8c8d; font-style: italic;">No detailed readings found</p>
                        <% } else { %>
                            <% detailedPowerData.forEach(reading => { %>
                                <% 
                                    const watts = reading.power_watts;
                                    let powerClass = 'power-default';
                                    if (watts > 1000) powerClass = 'power-high';
                                    else if (watts > 500) powerClass = 'power-medium';
                                    else if (watts > 0) powerClass = 'power-low';
                                    
                                    const kwhConsumed = parseFloat(reading.kwh_consumed) || 0;
                                %>
                                <div class="reading-item <%= powerClass %>">
                                    <div>
                                        <strong><%= reading.room_id %></strong><br>
                                        <small><%= new Date(reading.timestamp).toLocaleString() %></small>
                                    </div>
                                    <div style="text-align: right;">
                                        <div><strong><%= watts %>W</strong></div>
                                        <small><%= kwhConsumed.toFixed(4) %> kWh</small>
                                    </div>
                                </div>
                            <% }); %>
                        <% } %>
                    </div>
                </div>
            </div>
        </main>
    </div>
    
    <script>
        // Auto-refresh every 60 seconds for power usage
        setTimeout(() => {
            location.reload();
        }, 60000);
        
        // Set default dates if empty
        window.onload = function() {
            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');
            
            if (!startDateInput.value) {
                const weekAgo = new Date();
                weekAgo.setDate(weekAgo.getDate() - 7);
                startDateInput.value = weekAgo.toISOString().split('T')[0];
            }
            
            if (!endDateInput.value) {
                const today = new Date();
                endDateInput.value = today.toISOString().split('T')[0];
            }
        };
    </script>
</body>
</html>