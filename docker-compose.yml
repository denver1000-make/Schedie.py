services:
  dashboard:
    build:
      context: ./dashboard
      dockerfile: Dockerfile
    container_name: dashboard_container
    ports:
      - "80:8080" # web dashboard accessible at http://localhost:8080
    networks:
      - default
      - shared_test_network_mqtt
    environment:
      ENV_FILE: /app/config/.env
    depends_on:
      mosquitto_rpi:
        condition: service_started
      postgres:
        condition: service_healthy
    volumes:
      - ./dashboard:/app
      - ./config:/app/config
  postgres:
    image: timescale/timescaledb:latest-pg17
    container_name: postgres_db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: schedule_db
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -d schedule_db" ]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - shared_test_network_mqtt
      - default
    ports:
      - "5432:5432"
    volumes:
      - ./postgres/postgres_data:/var/lib/postgresql/data  # Data storage volume
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf  # Mount the custom config file
    command: ["postgres", "-c", "config_file=/etc/postgresql/postgresql.conf"]  # Use the custom config
  mosquitto_rpi:
    image: eclipse-mosquitto
    container_name: mosquitto_broker
    networks:
      - shared_test_network_mqtt
      - default
    ports:
      - "9001:9001"
      - "1883:1883"
    volumes:
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/config:/mosquitto/config
      - ./mosquitto/log:/mosquitto/log
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    container_name: app_container
    depends_on:
      mosquitto_rpi:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      ENV_FILE: /app/config/.env
    volumes:
      - ./config:/app/config
volumes:
  postgres_data:
    driver: local
networks:
    shared_test_network_mqtt:
        external: true